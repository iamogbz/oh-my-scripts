"use strict";(self.webpackChunkoh_my_scripts=self.webpackChunkoh_my_scripts||[]).push([[830],{4337:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isPRFiles=t.isSingleFile=t.isCompare=t.isCommit=t.getCompareHeadSha=t.getCommitSha=t.getRepoPath=t.getUserRepo=t.getCleanPathname=t.githubApi=void 0;const i=n(9897),o=n(7594),s="github.com"===location.hostname?"https://api.github.com/":`${location.origin}/api/v3/`,r="compare?/(.{1,40})\\.{3}(.{1,40})",a="commits?/[0-9a-f]{5,40}",c="^pull/\\d+",u=i.ns`GITHUB_TOKEN`;class l extends Error{constructor(...e){super(e.join("\n"))}}function p(){return window.localStorage.getItem(u)}function h(){return location.pathname.replace(/^[/]|[/]$/g,"")}function g(){return h().split("/").slice(2).join("/")}t.githubApi={v3:function(e,t={accept404:!1}){const n=p();return(0,o.request)(s+e,{headers:Object.assign({Accept:"application/vnd.github.v3+json","User-Agent":i.ns`user-script`},n?{Authorization:`token ${n}`}:{})}).then((function(e){var n;return null===(n=e.text)||void 0===n?void 0:n.call(e).then((function(n){const i=n.length>0?JSON.parse(n):{status:e.status};if(e.ok||!0===t.accept404&&404===e.status)return i;throw function(e){return"string"==typeof e.message&&e.message.includes("API rate limit exceeded")?new l("Rate limit exceeded.",p()?"It may be time for a walk!":"Set your token in the options or take a walk!"," üçÉ üåû"):"Bad credentials"===e.message?new l("The token seems to be incorrect or expired. Update it in the options."):new l("Unable to fetch.",p()?"Ensure that your token has access to this repo.":"Maybe adding a token in the options will fix this issue.",JSON.stringify(e,void 0,"\t"))}(i)}))}))}},t.getCleanPathname=h,t.getUserRepo=function(){return h().split("/").slice(0,2).join("/")},t.getRepoPath=g,t.getCommitSha=function(){const e=g().match(a);if(e)return e[0].split("/")[1]},t.getCompareHeadSha=function(){var e;return null===(e=function(){const e=g().match(r);if(e)return e.slice(1,3)}())||void 0===e?void 0:e[1]},t.isCommit=function(){return new RegExp(`^${a}`).test(g())||new RegExp(`${c}/${a}`).test(g())},t.isCompare=function(){return new RegExp(r).test(g())},t.isSingleFile=function(){return/^blob\//.test(g())},t.isPRFiles=function(){return new RegExp(`${c}/files`).test(g())}}}]);