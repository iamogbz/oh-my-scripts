"use strict";(self.webpackChunkoh_my_scripts=self.webpackChunkoh_my_scripts||[]).push([[830],{5008:function(t,e,n){var o,i=this&&this.__makeTemplateObject||function(t,e){return Object.defineProperty?Object.defineProperty(t,"raw",{value:e}):t.raw=e,t},r=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),a=this&&this.__assign||function(){return a=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},a.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.isPRFiles=e.isSingleFile=e.isCompare=e.isCommit=e.getCompareHeadSha=e.getCommitSha=e.getRepoPath=e.getUserRepo=e.getCleanPathname=e.githubApi=void 0;var s,c,u=n(7819),p=n(1603),l="github.com"===location.hostname?"https://api.github.com/":"".concat(location.origin,"/api/v3/"),h="compare?/(.{1,40})\\.{3}(.{1,40})",f="commits?/[0-9a-f]{5,40}",g="^pull/\\d+",m=(0,u.ns)(s||(s=i(["GITHUB_TOKEN"],["GITHUB_TOKEN"]))),d=function(t){function e(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return t.call(this,e.join("\n"))||this}return r(e,t),e}(Error);function v(){return window.localStorage.getItem(m)}function y(){return location.pathname.replace(/^[/]|[/]$/g,"")}function b(){return y().split("/").slice(2).join("/")}e.githubApi={v3:function(t,e){void 0===e&&(e={accept404:!1});var n=v();return(0,p.request)(l+t,{headers:a({Accept:"application/vnd.github.v3+json","User-Agent":(0,u.ns)(c||(c=i(["user-script"],["user-script"])))},n?{Authorization:"token ".concat(n)}:{})}).then((function(t){var n;return null===(n=t.text)||void 0===n?void 0:n.call(t).then((function(n){var o=n.length>0?JSON.parse(n):{status:t.status};if(t.ok||!0===e.accept404&&404===t.status)return o;throw function(t){return"string"==typeof t.message&&t.message.includes("API rate limit exceeded")?new d("Rate limit exceeded.",v()?"It may be time for a walk!":"Set your token in the options or take a walk!"," üçÉ üåû"):"Bad credentials"===t.message?new d("The token seems to be incorrect or expired. Update it in the options."):new d("Unable to fetch.",v()?"Ensure that your token has access to this repo.":"Maybe adding a token in the options will fix this issue.",JSON.stringify(t,void 0,"\t"))}(o)}))}))}},e.getCleanPathname=y,e.getUserRepo=function(){return y().split("/").slice(0,2).join("/")},e.getRepoPath=b,e.getCommitSha=function(){var t=b().match(f);if(t)return t[0].split("/")[1]},e.getCompareHeadSha=function(){var t;return null===(t=function(){var t=b().match(h);if(t)return t.slice(1,3)}())||void 0===t?void 0:t[1]},e.isCommit=function(){return new RegExp("^".concat(f)).test(b())||new RegExp("".concat(g,"/").concat(f)).test(b())},e.isCompare=function(){return new RegExp(h).test(b())},e.isSingleFile=function(){return/^blob\//.test(b())},e.isPRFiles=function(){return new RegExp("".concat(g,"/files")).test(b())}}}]);